<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="1" total="3" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="33961" started-at="2020-05-17T19:06:18 IST" finished-at="2020-05-17T19:06:52 IST">
    <groups>
    </groups>
    <test name="Default test" duration-ms="33961" started-at="2020-05-17T19:06:18 IST" finished-at="2020-05-17T19:06:52 IST">
      <class name="Sample.Drag">
        <test-method status="PASS" signature="startReport()[pri:0, instance:Sample.Drag@37d31475]" name="startReport" is-config="true" duration-ms="228" started-at="2020-05-17T19:06:18 IST" finished-at="2020-05-17T19:06:18 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startReport -->
        <test-method status="PASS" signature="setup()[pri:0, instance:Sample.Drag@37d31475]" name="setup" duration-ms="27990" started-at="2020-05-17T19:06:18 IST" finished-at="2020-05-17T19:06:46 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="getresult(org.testng.ITestResult)[pri:0, instance:Sample.Drag@37d31475]" name="getresult" is-config="true" duration-ms="2329" started-at="2020-05-17T19:06:46 IST" finished-at="2020-05-17T19:06:49 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=setup status=SUCCESS method=Drag.setup()[pri:0, instance:Sample.Drag@37d31475] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getresult -->
        <test-method status="FAIL" signature="registration()[pri:0, instance:Sample.Drag@37d31475]" name="registration" duration-ms="1010" started-at="2020-05-17T19:06:49 IST" depends-on-methods="Sample.Drag.setup" finished-at="2020-05-17T19:06:50 IST">
          <exception class="org.openqa.selenium.InvalidArgumentException">
            <message>
              <![CDATA[invalid argument
  (Session info: chrome=81.0.4044.138)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-U5JUOI7', ip: '192.168.43.240', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_251'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 81.0.4044.138, chrome: {chromedriverVersion: 81.0.4044.138 (8c6c7ba89cc9..., userDataDir: C:\Users\PAPITH~1\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:51218}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: 80a80a5c99a285f1455f60edcdf7f295]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.InvalidArgumentException: invalid argument
  (Session info: chrome=81.0.4044.138)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-U5JUOI7', ip: '192.168.43.240', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_251'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 81.0.4044.138, chrome: {chromedriverVersion: 81.0.4044.138 (8c6c7ba89cc9..., userDataDir: C:\Users\PAPITH~1\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:51218}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: 80a80a5c99a285f1455f60edcdf7f295
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
at java.lang.reflect.Constructor.newInstance(Unknown Source)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:285)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:84)
at Sample.Drag.registration(Drag.java:79)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.InvalidArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registration -->
        <test-method status="PASS" signature="getresult(org.testng.ITestResult)[pri:0, instance:Sample.Drag@37d31475]" name="getresult" is-config="true" duration-ms="400" started-at="2020-05-17T19:06:50 IST" finished-at="2020-05-17T19:06:50 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=registration status=FAILURE method=Drag.registration()[pri:0, instance:Sample.Drag@37d31475] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getresult -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:Sample.Drag@37d31475]" name="teardown" is-config="true" duration-ms="1881" started-at="2020-05-17T19:06:50 IST" finished-at="2020-05-17T19:06:52 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- Sample.Drag -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
